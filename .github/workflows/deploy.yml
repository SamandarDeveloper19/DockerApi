name: Deploy to Server                             # Имя workflow, видно в Actions

on:
  workflow_run:                                    # Запускать при завершении другого workflow
    workflows: ["Docker CD"]                       # Название workflow, за которым следим (Docker CD)
    types:
      - completed                                  # Срабатывать, когда тот workflow завершился

jobs:
  deploy:                                          # Имя job'а
    runs-on: ubuntu-latest                         # Агент GitHub Actions (Ubuntu)

    steps:
      - name: Checkout                               # Получаем код (хоть он и не обязателен здесь)
        uses: actions/checkout@v4

      - name: Setup SSH                              # Подключаем SSH-агента
        uses: webfactory/ssh-agent@v0.9.0            # Экшен для добавления SSH-ключа
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }} # Приватный ключ, который добавлен в Secrets

      - name: Deploy on server
        run: |                                       # Многострочная команда
          ssh -o StrictHostKeyChecking=no \
          ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} " \
            cd ~/docker &&                              # Заходим в папку с docker-compose.yml
            docker compose pull &&                   # Тянем свежий образ
            docker compose up -d                     # Перезапускаем контейнер
          "


#  docker run -d --name watchtower \
#  -v /var/run/docker.sock:/var/run/docker.sock \
#  containrrr/watchtower docker-api \
#  --interval 60  # проверять раз в 60 сек